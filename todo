Handle errors enqueuing, prevent busy loop
Figure out how EnqueueError is used.
Fail build on low test coverage
Add perform_on_commit extension
Add features section to README.md.
Add motivation section to README.md.
 - last_error fills screen
 - locking not required
 - ActiveRecord loaded too early
 - Terminology does not match ActiveJob
 - Retrieving and interacting with jobs difficult
 - Wrapper classes, subclasses
 - Updating jobs difficult
Add ability to run tests on several Ruby/ActiveJob versions.
Use pre version when in development.
Allow some tests to run against other backends. Use tags.
Allow query interface to be used with other backends.
Rewrite release script in Ruby
Should I serialize `arguments:` in Relation?
Clarify separatation between update and update_job
Better name for todo method.
Fix LEVEL when running rspec from console
Add test for the enqueued_at and locale hack.
Send a change for ActiveJob to serialize enqueued_at, locale
Add locking extensions
Test that ActiveRecord load hooks do not run
Figure out a way to run without including the Arj module.
Tests for default ordering with last, first, etc.
Check whether auto-increment is required when using MySQL
Add tests for MySQL and Postgres
Implement support for nested blocks in relation methods.
Arj should not know about discarded_at. Maybe move discarded, todo, executable etc. into Worker.
Add Workers for other cases, sharded worker, workers that know about discarded_at, etc.
Fix ActiveRecord::Relation doc links.
Proxy all Arj methods to Job, only wrap if the result is a relation. Same for Query module.
Make including extensions use a method rather than naming each module.
Why does the console print already initialized? What are we loading twice?
Handle worker interrupts
Allow switching from mysql to sqlite during tests/console
